{
  "name": "pos",
  "version": "1.0.2",
  "scripts": {
    "postinstall": "electron-builder install-app-deps",
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "pos-serve": "concurrently \"ng serve pos\" \"npm run electron\"",
    "pos": "npm run build pos && npm run electron",
    "pos:dev": "ng build pos --prod --configuration=dev",
    "pos:testing": "ng build pos --prod --configuration=testing",
    "pos:demo": "ng build pos --prod --configuration=demo",
    "pos:staging": "ng build pos --prod --configuration=staging",
    "pos:prod": "ng build pos --prod --configuration=production",
    "electron": "electron ./dist/pos/electron",
    "package:win:build-realm": "cd ./gulp/package-pos && gulp pos",
    "package:win:build-realm:staging": "cd ./gulp/package-pos && gulp pos-staging",
    "package:win:build-realm:prod": "cd ./gulp/package-pos && gulp pos-prod",
    "package:win:clean": "cd ./gulp/package-pos && gulp pos-clean",
    "package:win:dev": "npm run package:win:clean && npm run pos:dev && electron-packager dist/pos --out=release/packages --platform=win32 --arch=all --overwrite --no-prune --asar=true && npm run package:win:build-realm",
    "package:win:testing": "npm run package:win:clean && npm run pos:testing && electron-packager dist/pos --out=release/packages --platform=win32 --arch=all --overwrite --no-prune --asar=true && npm run package:win:build-realm",
    "package:win:demo": "npm run package:win:clean && npm run pos:demo && electron-packager dist/pos --out=release/packages --platform=win32 --arch=all --overwrite --no-prune --asar=true && npm run package:win:build-realm",
    "package:win:staging": "npm run package:win:clean && npm run pos:staging && electron-packager dist/pos --out=release/packages --platform=win32 --arch=all --overwrite --no-prune --asar=true && npm run package:win:build-realm:staging",
    "package:win:prod": "npm run package:win:clean && npm run pos:prod && electron-packager dist/pos --out=release/packages --platform=win32 --arch=all --overwrite --no-prune --asar=true && npm run package:win:build-realm:prod",
    "package:linux": "electron-packager dist/pos $npm_package_name-$npm_package_version --out=release/packages --platform=linux --arch=all --overwrite --no-prune --asar=true",
    "package:osx": "electron-packager dist/pos $npm_package_name-$npm_package_version --out=release/packages --platform=darwin --arch=all --overwrite --no-prune --asar=true",
    "package:all": "electron-packager dist/pos $npm_package_name-$npm_package_version --out=release/packages --all --arch=all --overwrite --no-prune --asar=true",
    "package:winstaller:clean": "cd ./gulp/package-pos && gulp pos-winstaller-clean",
    "package:winstaller:dev": "npm run package:winstaller:clean && npm run package:win:dev && node ./src/app/pos/winstaller-build/winstaller-build.js",
    "package:winstaller:testing": "npm run package:winstaller:clean && npm run package:win:testing && node ./src/app/pos/winstaller-build/winstaller-build.js",
    "package:winstaller:demo": "npm run package:winstaller:clean && npm run package:win:demo && node ./src/app/pos/winstaller-build/winstaller-build.js",
    "package:winstaller:staging": "npm run package:winstaller:clean && npm run package:win:staging && node ./src/app/pos/winstaller-build/winstaller-build.staging.js",
    "package:winstaller:prod": "npm run package:winstaller:clean && npm run package:win:prod && node ./src/app/pos/winstaller-build/winstaller-build.prod.js"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~7.0.0",
    "@angular/cdk": "^7.0.0",
    "@angular/common": "~7.0.0",
    "@angular/compiler": "~7.0.0",
    "@angular/core": "~7.0.0",
    "@angular/flex-layout": "^7.0.0-beta.19",
    "@angular/forms": "~7.0.0",
    "@angular/http": "~7.0.0",
    "@angular/material": "^7.0.0",
    "@angular/platform-browser": "~7.0.0",
    "@angular/platform-browser-dynamic": "~7.0.0",
    "@angular/router": "~7.0.0",
    "@aspnet/signalr": "^1.1.0",
    "@fortawesome/fontawesome-free": "^5.4.1",
    "@ng-bootstrap/ng-bootstrap": "^3.3.1",
    "@ng-select/ng-select": "^2.11.1",
    "@ngrx/effects": "^6.1.1",
    "@ngrx/entity": "^6.1.2",
    "@ngrx/store": "^6.1.1",
    "@ngrx/store-devtools": "^6.1.2",
    "@swimlane/ngx-datatable": "^13.1.0",
    "angular2-multiselect-dropdown": "~4.2.1",
    "angular-oauth2-oidc": "^5.0.2",
    "angular2-jwt": "^0.2.3",
    "bootstrap": "^4.1.3",
    "concurrently": "^4.0.1",
    "core-js": "^2.5.4",
    "font-awesome": "^4.7.0",
    "gulp-asar": "^1.0.0",
    "gulp-run": "^1.7.1",
    "hammerjs": "^2.0.8",
    "jquery": "^3.3.1",
    "md5-typescript": "^1.0.5",
    "ng-drag-drop": "^5.0.0",
    "ng-multiselect-dropdown": "^0.2.3",
    "ngx-bootstrap": "^3.1.1",
    "ngx-chips": "^2.0.0-beta.0",
    "ngx-editor": "^4.1.0",
    "ngx-toastr": "^9.1.1",
    "popper.js": "^1.14.6",
    "realm": "2.21.1",
    "rxjs": "~6.3.3",
    "rxjs-compat": "^6.4.0",
    "update-electron-app": "^1.3.0",
    "zone.js": "~0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.10.0",
    "@angular/cli": "~7.0.2",
    "@angular/compiler-cli": "~7.0.0",
    "@angular/language-service": "~7.0.0",
    "@types/jasmine": "~2.8.8",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "~8.9.4",
    "asar": "^1.0.0",
    "codelyzer": "~4.5.0",
    "electron": "3.0.12",
    "electron-builder": "^20.38.3",
    "electron-packager": "13.0.1",
    "electron-winstaller": "^2.7.0",
    "gulp": "4.0.0",
    "gulp-rename": "1.4.0",
    "jasmine-core": "~2.99.1",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~3.0.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "moment": "^2.23.0",
    "ngx-build-plus": "^7.3.2",
    "protractor": "~5.4.0",
    "ts-node": "~7.0.0",
    "tslint": "~5.11.0",
    "typescript": "~3.1.1"
  }
}
